{"version":3,"sources":["store/actions/action-types.js","store/actions/action-creators.js","utils/functions.js","common/AppHeader.js","common/AppFooter.js","pages/Home.js","utils/baseUrl.js","pages/Login.js","common/AlterEmployeeModal.js","common/ConfirmationModal.js","pages/subpages/EmployeesMng.js","pages/subpages/LeavesMng.js","common/AlterLeaveModal.js","pages/subpages/EmployeeLeaves.js","pages/Dashboard.js","App.js","reportWebVitals.js","store/reducers/loading.reducer.js","store/reducers/global.reducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["START_LOADING","STOP_LOADING","SET_ACCESS_TOKEN","REMOVE_ACCESS_TOKEN","SET_CONNECTED_USER","REMOVE_CONNECTED_USER","SET_THEME","setAccessToken","payload","type","_","setConnectedUser","setTheme","getStatusColor","status","noFieldIsEmpty","obj","Object","values","every","value","AppHeader","str","nbChars","history","useHistory","connectedUser","useSelector","state","global","theme","dispatch","useDispatch","tooltip","Tooltip","Header","Navbar","appearance","style","display","justifyContent","borderBottom","height","width","alignItems","src","alt","className","onClick","padding","gap","IconButton","icon","Icon","newTheme","localStorage","setItem","window","location","reload","ButtonToolbar","Whisper","placement","trigger","speaker","removeItem","removeConnectedUser","push","Alert","info","lastname","firstname","length","substring","AppFooter","Footer","textAlign","String","Date","getMonth","padStart","getFullYear","Home","store","useEffect","baseUrl","Login","useState","id","password","employee","setEmployee","handleFormChange","k","v","handleKeyDown","event","key","handleLogin","axios","post","then","res","data","accessToken","success","catch","err","error","Content","Panel","header","bordered","Form","fluid","FormGroup","ControlLabel","FormControl","name","onChange","onKeyDown","AlterEmloyeeModal","title","isShown","onClose","btns","personToUpdate","label","formValues","setFormValues","map","formValue","Modal","overflow","show","onHide","marginLeft","marginRight","Title","Body","visibility","Input","marginBottom","placeholder","index","Button","savedPerson","forEach","getPerson","require","ConfirmationModal","text","backdrop","size","color","fontSize","Column","Table","HeaderCell","Cell","EmployeesMng","users","setUsers","isAddModalShown","setIsAddModalShown","isUpdateModalShown","setIsUpdateModalShown","isDeleteModalShown","setIsDeleteModalShown","setPersonToUpdate","addModalContent","addPerson","updateModalContent","_id","updatePerson","deleteModalContent","deleteEmployee","user","put","timer","get","setTimeout","employees","clearTimeout","targetPerson","newUsers","filter","handleAction","action","person","autoHeight","wordWrap","renderEmpty","align","fixed","dataKey","cursor","Placeholder","Grid","rows","columns","active","AlterEmployeeModal","LeavesMng","leaves","setLeaves","isAcceptModalShown","setIsAcceptModalShown","isRefuseModalShown","setIsRefuseModalShown","targetLeaveId","setTargetLeaveId","acceptModalContent","updateLeave","refuseModalContent","newStatus","targetId","leaveToUpdate","newLeaves","leave","Tag","departureDate","returnDate","savedLeave","employeeId","level","getLeave","setLeaveToUpdate","addLeave","deleteLeave","AlterLeaveModal","CustomNav","onSelect","navElements","props","Nav","activeKey","Item","eventKey","Dashboard","setNavElements","setActive","path","EmployeeLeaves","App","getItem","headers","Authorization","Container","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loadingReducer","initialState","globalReducer","combineReducers","loading","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8be9db10.chunk.js","sourcesContent":["export const START_LOADING = \"START_LOADING\";\r\nexport const STOP_LOADING = \"STOP_LOADING\";\r\n\r\nexport const SET_ACCESS_TOKEN = \"SET_ACCESS_TOKEN\";\r\nexport const REMOVE_ACCESS_TOKEN = \"REMOVE_ACCESS_TOKEN\";\r\nexport const SET_CONNECTED_USER = \"SET_CONNECTED_USER\";\r\nexport const REMOVE_CONNECTED_USER = \"REMOVE_CONNECTED_USER\";\r\n\r\nexport const SET_THEME = \"SET_THEME\";\r\n","import * as _ from \"./action-types\";\r\n\r\nexport const startLoading = (payload) => {\r\n  return {\r\n    type: _.START_LOADING,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const stopLoading = (payload) => {\r\n  return {\r\n    type: _.STOP_LOADING,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setAccessToken = (payload) => {\r\n  return {\r\n    type: _.SET_ACCESS_TOKEN,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const removeAccessToken = (payload) => {\r\n  return {\r\n    type: _.REMOVE_ACCESS_TOKEN,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setConnectedUser = (payload) => {\r\n  return {\r\n    type: _.SET_CONNECTED_USER,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const removeConnectedUser = (payload) => {\r\n  return {\r\n    type: _.REMOVE_CONNECTED_USER,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setTheme = (payload) => {\r\n  return {\r\n    type: _.SET_THEME,\r\n    payload: payload,\r\n  };\r\n};\r\n","export const getFirstNChars = (str, nbChars) => {\r\n  return str.length <= nbChars ? str : str.substring(0, nbChars) + \"..\";\r\n};\r\n\r\nexport const getStatusColor = (status) => {\r\n  switch (status) {\r\n    case \"Acceptée\":\r\n      return \"green\";\r\n    case \"Réfusée\":\r\n      return \"red\";\r\n    case \"En cours de traitement\":\r\n    default:\r\n      return \"cyan\";\r\n  }\r\n};\r\n\r\nexport const noFieldIsEmpty = (obj) => {\r\n  return Object.values(obj).every((value) => value !== \"\");\r\n};\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Header,\r\n  Navbar,\r\n  ButtonToolbar,\r\n  Icon,\r\n  IconButton,\r\n  Whisper,\r\n  Tooltip,\r\n  Alert,\r\n} from \"rsuite\";\r\nimport {\r\n  removeAccessToken,\r\n  removeConnectedUser,\r\n  setTheme,\r\n} from \"../store/actions/action-creators\";\r\nimport { getFirstNChars } from \"../utils/functions\";\r\n\r\nconst AppHeader = () => {\r\n  const history = useHistory();\r\n  const connectedUser = useSelector((state) => state.global.connectedUser);\r\n  const theme = useSelector((state) => state.global.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    dispatch(removeAccessToken());\r\n    dispatch(removeConnectedUser());\r\n    history.push(\"/login\");\r\n    Alert.info(\"Vous êtes déconnectés.\", 5000);\r\n  };\r\n\r\n  const tooltip = <Tooltip>Se déconnecter</Tooltip>;\r\n\r\n  const switchTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    localStorage.setItem(\"theme\", newTheme);\r\n\r\n    dispatch(setTheme(newTheme));\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Navbar\r\n        appearance=\"inverse\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          borderBottom: \"2px solid lightgrey\",\r\n        }}\r\n      >\r\n        <Navbar.Header\r\n          style={{\r\n            height: \"70px\",\r\n            width: \"97%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"/assets/imgs/delice.png\"\r\n            alt=\"Délice\"\r\n            className=\"navbar-logo\"\r\n            onClick={() => {\r\n              // history.push(\"/\");\r\n            }}\r\n          />\r\n\r\n          <div\r\n            style={{ padding: \".75rem 1rem\", display: \"flex\", gap: \".25rem\" }}\r\n          >\r\n            <IconButton\r\n              icon={<Icon icon={theme === \"light\" ? \"moon-o\" : \"sun-o\"} />}\r\n              appearance=\"primary\"\r\n              onClick={switchTheme}\r\n            />\r\n\r\n            {connectedUser && (\r\n              <ButtonToolbar>\r\n                <Whisper\r\n                  placement=\"autoVerticalEnd\"\r\n                  trigger=\"hover\"\r\n                  speaker={tooltip}\r\n                >\r\n                  <IconButton\r\n                    appearance=\"primary\"\r\n                    icon={<Icon icon=\"sign-out\" />}\r\n                    placement=\"right\"\r\n                    onClick={handleLogout}\r\n                  >\r\n                    {getFirstNChars(\r\n                      `${connectedUser.lastname} ${connectedUser.firstname}`,\r\n                      20\r\n                    )}\r\n                  </IconButton>\r\n                </Whisper>\r\n              </ButtonToolbar>\r\n            )}\r\n          </div>\r\n        </Navbar.Header>\r\n      </Navbar>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { Footer } from \"rsuite\";\r\n\r\nconst AppFooter = () => {\r\n  return (\r\n    <Footer style={{ textAlign: \"center\", padding: \".5rem\" }}>\r\n      Délice | Gestion des Congés |{\" \"}\r\n      {String(new Date().getMonth() + 1).padStart(2, \"0\")}/{new Date().getFullYear()}\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const connectedUser = useSelector((store) => store.global.connectedUser);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!connectedUser) history.push(\"/login\");\r\n  }, []); // eslint-disable-line\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Home;\r\n","const baseUrl = \"http://localhost:4000/api\";\r\n\r\nexport default baseUrl;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Alert,\r\n  ButtonToolbar,\r\n  Content,\r\n  ControlLabel,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Icon,\r\n  IconButton,\r\n  Panel,\r\n} from \"rsuite\";\r\nimport {\r\n  setAccessToken,\r\n  setConnectedUser,\r\n} from \"../store/actions/action-creators\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [employee, setEmployee] = useState({ id: \"\", password: \"\" });\r\n\r\n  const handleFormChange = (k, v) => {\r\n    setEmployee({ ...employee, [k]: v });\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") handleLogin();\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (!employee.id || !employee.password) {\r\n      Alert.info(\"Tous les champs doivent être remplis.\", 5000);\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(`${baseUrl}/employees/auth`, employee)\r\n      .then((res) => {\r\n        if (res.data.employee) {\r\n          dispatch(setConnectedUser(res.data.employee));\r\n          dispatch(setAccessToken(res.data.accessToken));\r\n          localStorage.setItem(\"accessToken\", res.data.accessToken);\r\n          history.push(\"/management\");\r\n          Alert.success(\"Vous êtes connectés.\", 5000);\r\n        } else {\r\n          Alert.info(\"Identifiant et/ou mot de passe incorrects.\", 5000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-content\">\r\n      <Content>\r\n        <Panel header={<h3>Connexion</h3>} bordered>\r\n          <Form fluid>\r\n            <FormGroup>\r\n              <ControlLabel>Identifiant</ControlLabel>\r\n              <FormControl\r\n                name=\"name\"\r\n                value={employee.id}\r\n                onChange={(v) => handleFormChange(\"id\", v)}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Mot de passe</ControlLabel>\r\n              <FormControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={employee.password}\r\n                onChange={(v) => handleFormChange(\"password\", v)}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ButtonToolbar>\r\n                <IconButton\r\n                  appearance=\"primary\"\r\n                  icon={<Icon icon=\"sign-in\" />}\r\n                  placement=\"right\"\r\n                  onClick={handleLogin}\r\n                >\r\n                  Se connecter\r\n                </IconButton>\r\n              </ButtonToolbar>\r\n            </FormGroup>\r\n          </Form>\r\n        </Panel>\r\n      </Content>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Modal, Whisper, Input, Tooltip } from \"rsuite\";\r\n\r\nconst AlterEmloyeeModal = ({\r\n  title,\r\n  isShown,\r\n  onClose,\r\n  btns,\r\n  personToUpdate,\r\n}) => {\r\n  const [formValues, setFormValues] = useState([\r\n    { id: \"id\", label: \"Id\", width: 100, value: \"\" },\r\n    { id: \"lastname\", label: \"Nom\", width: 300, value: \"\" },\r\n    { id: \"firstname\", label: \"Prénom\", width: 300, value: \"\" },\r\n    { id: \"level\", label: \"Grade\", width: 300, value: \"\" },\r\n    { id: \"phoneNb\", label: \"Téléphone\", width: 300, value: \"\" },\r\n    { id: \"email\", label: \"Email\", width: 300, value: \"\" },\r\n    { id: \"password\", label: \"Mot de passe\", width: 300, value: \"\" },\r\n  ]);\r\n\r\n  const getPerson = () => {\r\n    const savedPerson = {};\r\n    formValues.forEach((formValue) => {\r\n      savedPerson[formValue.id] = formValue.value;\r\n    });\r\n\r\n    return savedPerson;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (personToUpdate)\r\n      setFormValues((formValues) => {\r\n        return formValues.map((formValue) => {\r\n          const newFormValue = {\r\n            ...formValue,\r\n            value: personToUpdate[formValue.id],\r\n          };\r\n          return newFormValue;\r\n        });\r\n      });\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <Modal\r\n      overflow\r\n      show={isShown}\r\n      onHide={onClose}\r\n      style={{ width: 400, marginLeft: \"auto\", marginRight: \"auto\" }}\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {formValues.map(({ id, label, width, value }) => (\r\n          <Whisper\r\n            trigger=\"focus\"\r\n            key={label}\r\n            speaker={\r\n              <Tooltip style={{ visibility: value ? \"hidden\" : \"\" }}>\r\n                {\"Obligatoire\"}\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <Input\r\n              style={{ width, marginBottom: \".25rem\" }}\r\n              value={value}\r\n              onChange={(v) =>\r\n                setFormValues((formValues) =>\r\n                  formValues.map((formValue) =>\r\n                    formValue.id === id ? { ...formValue, value: v } : formValue\r\n                  )\r\n                )\r\n              }\r\n              placeholder={label}\r\n            />\r\n          </Whisper>\r\n        ))}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {btns.map(({ label, appearance, onClick }, index) => (\r\n          <Button\r\n            key={index}\r\n            onClick={() => onClick(getPerson())}\r\n            appearance={appearance}\r\n          >\r\n            {label}\r\n          </Button>\r\n        ))}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AlterEmloyeeModal;\r\n","const { Modal, Icon, Button } = require(\"rsuite\");\r\n\r\nconst ConfirmationModal = ({ text, isShown, btns, onClose }) => {\r\n  return (\r\n    <Modal backdrop=\"static\" show={isShown} onHide={onClose} size=\"xs\">\r\n      <Modal.Body>\r\n        <Icon\r\n          icon=\"remind\"\r\n          style={{\r\n            color: \"#ffb300\",\r\n            fontSize: 24,\r\n            marginRight: \".75rem\",\r\n          }}\r\n        />\r\n        {text}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {btns.map(({ label, appearance, color, onClick }, index) => (\r\n          <Button\r\n            key={index}\r\n            onClick={onClick}\r\n            appearance={appearance}\r\n            color={color}\r\n          >\r\n            {label}\r\n          </Button>\r\n        ))}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Placeholder, Table } from \"rsuite\";\r\nimport axios from \"axios\";\r\n\r\nimport baseUrl from \"../../utils/baseUrl\";\r\nimport { noFieldIsEmpty } from \"../../utils/functions\";\r\nimport AlterEmployeeModal from \"../../common/AlterEmployeeModal\";\r\nimport ConfirmationModal from \"../../common/ConfirmationModal\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst EmployeesMng = () => {\r\n  const [users, setUsers] = useState(null);\r\n  const [isAddModalShown, setIsAddModalShown] = useState(false);\r\n  const [isUpdateModalShown, setIsUpdateModalShown] = useState(false);\r\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\r\n  const [personToUpdate, setPersonToUpdate] = useState({});\r\n\r\n  const addModalContent = {\r\n    title: \"Ajout d'un employé\",\r\n    btns: [\r\n      {\r\n        label: \"Ajouter\",\r\n        appearance: \"primary\",\r\n        onClick: (savedPerson) => {\r\n          if (noFieldIsEmpty(savedPerson)) {\r\n            addPerson(savedPerson);\r\n            setIsAddModalShown(false);\r\n          } else {\r\n            Alert.info(\"Tous les champs doivent être remplis.\", 5000);\r\n          }\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsAddModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isAddModalShown,\r\n    onClose: () => setIsAddModalShown(false),\r\n  };\r\n\r\n  const updateModalContent = {\r\n    title: \"Modification des details d'un employé\",\r\n    btns: [\r\n      {\r\n        label: \"Modifier\",\r\n        appearance: \"primary\",\r\n        onClick: (savedPerson) => {\r\n          savedPerson._id = personToUpdate._id;\r\n          if (noFieldIsEmpty(savedPerson)) {\r\n            updatePerson(savedPerson);\r\n            setIsUpdateModalShown(false);\r\n          } else {\r\n            Alert.info(\"Tous les champs doivent être remplis.\", 5000);\r\n          }\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsUpdateModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isUpdateModalShown,\r\n    personToUpdate: personToUpdate,\r\n    onClose: () => setIsUpdateModalShown(false),\r\n  };\r\n\r\n  const deleteModalContent = {\r\n    text: \"Êtes-vous sûr de vouloir supprimer cet employé ?\",\r\n    btns: [\r\n      {\r\n        label: \"Supprimer\",\r\n        appearance: \"primary\",\r\n        color: \"red\",\r\n        onClick: () => {\r\n          deleteEmployee(personToUpdate._id);\r\n          setIsDeleteModalShown(false);\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsDeleteModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isDeleteModalShown,\r\n    onClose: () => setIsDeleteModalShown(false),\r\n  };\r\n\r\n  const addPerson = (savedPerson) => {\r\n    axios\r\n      .post(`${baseUrl}/employees`, savedPerson)\r\n      .then((res) => {\r\n        Alert.success(\"Ajouté avec succès.\", 5000);\r\n        setUsers((users) => [...users, res.data]);\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n  };\r\n\r\n  const updatePerson = (savedPerson) => {\r\n    setUsers((users) =>\r\n      users.map((user) => (user._id === savedPerson._id ? savedPerson : user))\r\n    );\r\n\r\n    axios\r\n      .put(`${baseUrl}/employees`, savedPerson)\r\n      .then((res) => {\r\n        Alert.success(\"Modifié avec succès.\", 5000);\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    axios\r\n      .get(`${baseUrl}/employees`)\r\n      .then((res) => {\r\n        timer = setTimeout(() => {\r\n          setUsers(res.data.employees);\r\n        }, 500);\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, []);\r\n\r\n  const deleteEmployee = (targetPerson) => {\r\n    setUsers((users) => {\r\n      const newUsers = users.filter(({ _id }) => _id !== targetPerson);\r\n      axios\r\n        .put(`${baseUrl}/employees/delete`, { _id: targetPerson })\r\n        .then((res) => {\r\n          Alert.info(\"Supprimé avec succès.\", 5000);\r\n        })\r\n        .catch((err) => {\r\n          Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n        });\r\n      return newUsers;\r\n    });\r\n  };\r\n\r\n  const handleAction = (action, person) => {\r\n    switch (action) {\r\n      case \"add\":\r\n        setIsAddModalShown(true);\r\n        break;\r\n      case \"update\":\r\n        setIsUpdateModalShown(true);\r\n        setPersonToUpdate(person);\r\n        break;\r\n      case \"delete\":\r\n        setIsDeleteModalShown(true);\r\n        setPersonToUpdate(person);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ marginBottom: \"2.5rem\" }}>Gestion des Employés</h1>\r\n\r\n      <Button\r\n        size=\"lg\"\r\n        style={{ marginBottom: \"2.5rem\" }}\r\n        onClick={() => handleAction(\"add\")}\r\n      >\r\n        Ajouter un employé\r\n      </Button>\r\n\r\n      {users !== null ? (\r\n        <Table\r\n          autoHeight\r\n          wordWrap\r\n          height={90}\r\n          data={users}\r\n          renderEmpty={() => (\r\n            <div\r\n              style={{\r\n                height: 45,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <p>Aucun employé trouvé.</p>\r\n            </div>\r\n          )}\r\n        >\r\n          <Column width={100} align=\"center\" fixed>\r\n            <HeaderCell>Id</HeaderCell>\r\n            <Cell dataKey=\"id\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Nom</HeaderCell>\r\n            <Cell dataKey=\"lastname\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Prénom</HeaderCell>\r\n            <Cell dataKey=\"firstname\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Grade</HeaderCell>\r\n            <Cell dataKey=\"level\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Téléphone</HeaderCell>\r\n            <Cell dataKey=\"phoneNb\" />\r\n          </Column>\r\n\r\n          <Column width={300}>\r\n            <HeaderCell>Email</HeaderCell>\r\n            <Cell dataKey=\"email\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Mot de passe</HeaderCell>\r\n            <Cell dataKey=\"password\" />\r\n          </Column>\r\n\r\n          <Column width={120} fixed=\"right\">\r\n            <HeaderCell>Action</HeaderCell>\r\n\r\n            <Cell>\r\n              {(person) => {\r\n                return (\r\n                  <span>\r\n                    <a\r\n                      onClick={() => handleAction(\"update\", person)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Modifier{\" \"}\r\n                    </a>\r\n                    <br />\r\n                    <a\r\n                      onClick={() => handleAction(\"delete\", person)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Supprimer{\" \"}\r\n                    </a>\r\n                  </span>\r\n                );\r\n              }}\r\n            </Cell>\r\n          </Column>\r\n        </Table>\r\n      ) : (\r\n        <Placeholder.Grid rows={6} columns={4} active />\r\n      )}\r\n\r\n      {isAddModalShown && <AlterEmployeeModal {...addModalContent} />}\r\n      {isUpdateModalShown && <AlterEmployeeModal {...updateModalContent} />}\r\n      <ConfirmationModal {...deleteModalContent} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeesMng;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Alert, Placeholder, Table, Tag } from \"rsuite\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../../utils/baseUrl\";\r\nimport { getStatusColor } from \"../../utils/functions\";\r\nimport ConfirmationModal from \"../../common/ConfirmationModal\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst LeavesMng = () => {\r\n  const [leaves, setLeaves] = useState(null);\r\n  const [isAcceptModalShown, setIsAcceptModalShown] = useState(false);\r\n  const [isRefuseModalShown, setIsRefuseModalShown] = useState(false);\r\n  const [targetLeaveId, setTargetLeaveId] = useState(null);\r\n\r\n  const acceptModalContent = {\r\n    text: \"Êtes-vous sûr de vouloir accepter cette demande ?\",\r\n    btns: [\r\n      {\r\n        label: \"Accepter\",\r\n        appearance: \"primary\",\r\n        color: \"green\",\r\n        onClick: () => {\r\n          updateLeave(\"Acceptée\", targetLeaveId);\r\n          setIsAcceptModalShown(false);\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsAcceptModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isAcceptModalShown,\r\n    onClose: () => setIsAcceptModalShown(false),\r\n  };\r\n\r\n  const refuseModalContent = {\r\n    text: \"Êtes-vous sûr de vouloir réfuser cette demande ?\",\r\n    btns: [\r\n      {\r\n        label: \"Réfuser\",\r\n        appearance: \"primary\",\r\n        color: \"red\",\r\n        onClick: () => {\r\n          updateLeave(\"Réfusée\", targetLeaveId);\r\n          setIsRefuseModalShown(false);\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsRefuseModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isRefuseModalShown,\r\n    onClose: () => setIsRefuseModalShown(false),\r\n  };\r\n\r\n  const handleAction = (action, _id) => {\r\n    if (action === \"accept\") {\r\n      setIsAcceptModalShown(true);\r\n    } else if (action === \"refuse\") {\r\n      setIsRefuseModalShown(true);\r\n    }\r\n\r\n    setTargetLeaveId(_id);\r\n  };\r\n\r\n  const updateLeave = (newStatus, targetId) => {\r\n    setLeaves((leaves) => {\r\n      let leaveToUpdate;\r\n      const newLeaves = leaves.map((leave) => {\r\n        if (leave._id === targetId) {\r\n          leaveToUpdate = { ...leave, status: newStatus };\r\n          return leaveToUpdate;\r\n        } else return leave;\r\n      });\r\n\r\n      axios\r\n        .put(`${baseUrl}/leaves`, leaveToUpdate)\r\n        .then((res) => {\r\n          Alert.success(\"Status changé avec succès.\", 5000);\r\n        })\r\n        .catch((err) => {\r\n          Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n        });\r\n\r\n      return newLeaves;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    axios\r\n      .get(`${baseUrl}/leaves`)\r\n      .then((res) => {\r\n        timer = setTimeout(() => {\r\n          setLeaves(res.data.leaves);\r\n        }, 500);\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ marginBottom: \"2.5rem\" }}>Gestion des Congés</h1>\r\n\r\n      {leaves !== null ? (\r\n        <Table\r\n          autoHeight\r\n          wordWrap\r\n          height={90}\r\n          data={leaves}\r\n          renderEmpty={() => (\r\n            <div\r\n              style={{\r\n                height: 45,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <p>Aucune demande trouvée.</p>\r\n            </div>\r\n          )}\r\n        >\r\n          <Column width={100} align=\"center\" fixed>\r\n            <HeaderCell>Id employé</HeaderCell>\r\n            <Cell dataKey=\"employeeId\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Nom</HeaderCell>\r\n            <Cell dataKey=\"lastname\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Prénom</HeaderCell>\r\n            <Cell dataKey=\"firstname\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Grade</HeaderCell>\r\n            <Cell dataKey=\"level\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Date départ</HeaderCell>\r\n            <Cell dataKey=\"departureDate\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Date retour</HeaderCell>\r\n            <Cell dataKey=\"returnDate\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>État</HeaderCell>\r\n            <Cell>\r\n              {({ status }) => (\r\n                <Tag color={getStatusColor(status)}>{status}</Tag>\r\n              )}\r\n            </Cell>\r\n          </Column>\r\n\r\n          <Column width={120} fixed=\"right\">\r\n            <HeaderCell>Action</HeaderCell>\r\n\r\n            <Cell>\r\n              {(leave) => {\r\n                const { _id, status } = leave;\r\n                return (\r\n                  <span>\r\n                    {status !== \"Acceptée\" && (\r\n                      <a\r\n                        onClick={() => handleAction(\"accept\", _id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Accepter{\" \"}\r\n                      </a>\r\n                    )}\r\n\r\n                    {status === \"En cours de traitement\" && <br />}\r\n\r\n                    {status !== \"Réfusée\" && (\r\n                      <a\r\n                        onClick={() => handleAction(\"refuse\", _id)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Réfuser{\" \"}\r\n                      </a>\r\n                    )}\r\n                  </span>\r\n                );\r\n              }}\r\n            </Cell>\r\n          </Column>\r\n        </Table>\r\n      ) : (\r\n        <Placeholder.Grid rows={6} columns={4} active />\r\n      )}\r\n\r\n      {isAcceptModalShown && <ConfirmationModal {...acceptModalContent} />}\r\n      {isRefuseModalShown && <ConfirmationModal {...refuseModalContent} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeavesMng;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Modal, Whisper, Input, Tooltip } from \"rsuite\";\r\n\r\nconst AlterEmloyeeModal = ({\r\n  title,\r\n  isShown,\r\n  onClose,\r\n  btns,\r\n  leaveToUpdate,\r\n}) => {\r\n  const [formValues, setFormValues] = useState([\r\n    { id: \"departureDate\", label: \"Date départ\", width: 300, value: \"\" },\r\n    { id: \"returnDate\", label: \"Date retour\", width: 300, value: \"\" },\r\n  ]);\r\n\r\n  const connectedUser = useSelector((store) => store.global.connectedUser);\r\n\r\n  useEffect(() => {\r\n    if (leaveToUpdate)\r\n      setFormValues((formValues) => {\r\n        return [\r\n          { ...formValues[0], value: leaveToUpdate.departureDate },\r\n          { ...formValues[1], value: leaveToUpdate.returnDate },\r\n        ];\r\n      });\r\n  }, []); // eslint-disable-line\r\n\r\n  const getLeave = () => {\r\n    const savedLeave = {\r\n      employeeId: connectedUser.id,\r\n      lastname: connectedUser.lastname,\r\n      firstname: connectedUser.firstname,\r\n      level: connectedUser.level,\r\n      status: \"En cours de traitement\",\r\n    };\r\n\r\n    formValues.forEach((formValue) => {\r\n      savedLeave[formValue.id] = formValue.value;\r\n    });\r\n    return savedLeave;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      overflow\r\n      show={isShown}\r\n      onHide={onClose}\r\n      style={{ width: 400, marginLeft: \"auto\", marginRight: \"auto\" }}\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {formValues.map(({ id, label, width, value }) => (\r\n          <Whisper\r\n            trigger=\"focus\"\r\n            key={label}\r\n            speaker={\r\n              <Tooltip style={{ visibility: value ? \"hidden\" : \"\" }}>\r\n                {\"Obligatoire\"}\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <Input\r\n              style={{ width, marginBottom: \".25rem\" }}\r\n              value={value}\r\n              onChange={(v) =>\r\n                setFormValues((formValues) =>\r\n                  formValues.map((formValue) =>\r\n                    formValue.id === id ? { ...formValue, value: v } : formValue\r\n                  )\r\n                )\r\n              }\r\n              placeholder={label}\r\n            />\r\n          </Whisper>\r\n        ))}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {btns.map(({ label, appearance, onClick }, index) => (\r\n          <Button\r\n            key={index}\r\n            onClick={() => onClick(getLeave())}\r\n            appearance={appearance}\r\n          >\r\n            {label}\r\n          </Button>\r\n        ))}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AlterEmloyeeModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Alert, Button, Placeholder, Table, Tag } from \"rsuite\";\r\nimport axios from \"axios\";\r\n\r\nimport baseUrl from \"../../utils/baseUrl\";\r\nimport { getStatusColor, noFieldIsEmpty } from \"../../utils/functions\";\r\nimport AlterLeaveModal from \"../../common/AlterLeaveModal\";\r\nimport ConfirmationModal from \"../../common/ConfirmationModal\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst EmployeesMng = () => {\r\n  const connectedUser = useSelector((store) => store.global.connectedUser);\r\n  const [leaves, setLeaves] = useState(null);\r\n  const [isAddModalShown, setIsAddModalShown] = useState(false);\r\n  const [isUpdateModalShown, setIsUpdateModalShown] = useState(false);\r\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\r\n  const [leaveToUpdate, setLeaveToUpdate] = useState({});\r\n\r\n  const addModalContent = {\r\n    title: \"Ajout d'une demande de congé\",\r\n    btns: [\r\n      {\r\n        label: \"Ajouter\",\r\n        appearance: \"primary\",\r\n        onClick: (savedLeave) => {\r\n          if (noFieldIsEmpty(savedLeave)) {\r\n            addLeave(savedLeave);\r\n            setIsAddModalShown(false);\r\n          } else {\r\n            Alert.info(\"Tous les champs doivent être remplis.\", 5000);\r\n          }\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsAddModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isAddModalShown,\r\n    onClose: () => setIsAddModalShown(false),\r\n  };\r\n\r\n  const updateModalContent = {\r\n    title: \"Modification d'une demande de congé\",\r\n    btns: [\r\n      {\r\n        label: \"Modifier\",\r\n        appearance: \"primary\",\r\n        onClick: (savedLeave) => {\r\n          savedLeave._id = leaveToUpdate._id;\r\n          if (noFieldIsEmpty(savedLeave)) {\r\n            updateLeave(savedLeave);\r\n            setIsUpdateModalShown(false);\r\n          } else {\r\n            Alert.info(\"Tous les champs doivent être remplis.\", 5000);\r\n          }\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsUpdateModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isUpdateModalShown,\r\n    leaveToUpdate: leaveToUpdate,\r\n    onClose: () => setIsUpdateModalShown(false),\r\n  };\r\n\r\n  const deleteModalContent = {\r\n    text: \"Êtes-vous sûr de vouloir supprimer cette demande ?\",\r\n    btns: [\r\n      {\r\n        label: \"Supprimer\",\r\n        appearance: \"primary\",\r\n        color: \"red\",\r\n        onClick: () => {\r\n          deleteLeave(leaveToUpdate._id);\r\n          setIsDeleteModalShown(false);\r\n        },\r\n      },\r\n      {\r\n        label: \"Annuler\",\r\n        appearance: \"subtle\",\r\n        onClick: () => setIsDeleteModalShown(false),\r\n      },\r\n    ],\r\n    isShown: isDeleteModalShown,\r\n    onClose: () => setIsDeleteModalShown(false),\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    axios\r\n      .get(`${baseUrl}/leaves/${connectedUser.id}`)\r\n      .then((res) => {\r\n        timer = setTimeout(() => {\r\n          setLeaves(res.data.leaves);\r\n        }, 500);\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, []); // eslint-disable-line\r\n\r\n  const handleAction = (action, leave) => {\r\n    switch (action) {\r\n      case \"add\":\r\n        setIsAddModalShown(true);\r\n        break;\r\n      case \"update\":\r\n        setIsUpdateModalShown(true);\r\n        setLeaveToUpdate(leave);\r\n        break;\r\n      case \"delete\":\r\n        setIsDeleteModalShown(true);\r\n        setLeaveToUpdate(leave);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const addLeave = (savedLeave) => {\r\n    axios\r\n      .post(`${baseUrl}/leaves`, savedLeave)\r\n      .then((res) => {\r\n        Alert.success(\"Ajouté avec succès.\", 5000);\r\n        setLeaves((leaves) => [...leaves, res.data]);\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n  };\r\n\r\n  const updateLeave = (savedLeave) => {\r\n    setLeaves((leaves) =>\r\n      leaves.map((leave) => (leave._id === savedLeave._id ? savedLeave : leave))\r\n    );\r\n\r\n    axios\r\n      .put(`${baseUrl}/leaves`, savedLeave)\r\n      .then((res) => {\r\n        Alert.success(\"Modifié avec succès.\", 5000);\r\n      })\r\n      .catch((err) => {\r\n        Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n      });\r\n  };\r\n\r\n  const deleteLeave = (targetId) => {\r\n    setLeaves((leaves) => {\r\n      const newLeaves = leaves.filter(({ _id }) => _id !== targetId);\r\n      axios\r\n        .put(`${baseUrl}/leaves/delete`, { _id: targetId })\r\n        .then((res) => {\r\n          Alert.info(\"Congé supprimé avec succès.\", 5000);\r\n        })\r\n        .catch((err) => {\r\n          Alert.error(\"Erreur lors de la connexion au serveur.\");\r\n        });\r\n      return newLeaves;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ marginBottom: \"2.5rem\" }}>Liste des Congés</h1>\r\n\r\n      <Button\r\n        size=\"lg\"\r\n        style={{ marginBottom: \"2.5rem\" }}\r\n        onClick={() => handleAction(\"add\")}\r\n      >\r\n        Ajouter un congé\r\n      </Button>\r\n\r\n      {leaves !== null ? (\r\n        <Table\r\n          autoHeight\r\n          wordWrap\r\n          height={90}\r\n          data={leaves}\r\n          renderEmpty={() => (\r\n            <div\r\n              style={{\r\n                height: 45,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <p>Aucune demande trouvée.</p>\r\n            </div>\r\n          )}\r\n        >\r\n          <Column width={200}>\r\n            <HeaderCell>Date départ</HeaderCell>\r\n            <Cell dataKey=\"departureDate\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Date retour</HeaderCell>\r\n            <Cell dataKey=\"returnDate\" />\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>État</HeaderCell>\r\n            <Cell>\r\n              {({ status }) => (\r\n                <Tag color={getStatusColor(status)}>{status}</Tag>\r\n              )}\r\n            </Cell>\r\n          </Column>\r\n\r\n          <Column width={120} fixed=\"right\">\r\n            <HeaderCell>Action</HeaderCell>\r\n\r\n            <Cell>\r\n              {(leave) => {\r\n                return (\r\n                  <span>\r\n                    {leave.status === \"En cours de traitement\" && (\r\n                      <>\r\n                        <a\r\n                          onClick={() => handleAction(\"update\", leave)}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          {\" \"}\r\n                          Modifier{\" \"}\r\n                        </a>\r\n\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                    <a\r\n                      onClick={() => handleAction(\"delete\", leave)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Supprimer{\" \"}\r\n                    </a>\r\n                  </span>\r\n                );\r\n              }}\r\n            </Cell>\r\n          </Column>\r\n        </Table>\r\n      ) : (\r\n        <Placeholder.Grid rows={6} columns={4} active />\r\n      )}\r\n\r\n      {isAddModalShown && <AlterLeaveModal {...addModalContent} />}\r\n      {isUpdateModalShown && <AlterLeaveModal {...updateModalContent} />}\r\n      <ConfirmationModal {...deleteModalContent} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeesMng;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { Icon, Nav, Panel } from \"rsuite\";\r\nimport EmployeesMng from \"./subpages/EmployeesMng\";\r\nimport LeavesMng from \"./subpages/LeavesMng\";\r\nimport EmployeeLeaves from \"./subpages/EmployeeLeaves\";\r\nimport \"./page.scss\";\r\n\r\nconst CustomNav = ({ active, onSelect, navElements, ...props }) => {\r\n  return (\r\n    <Nav\r\n      {...props}\r\n      activeKey={active}\r\n      onSelect={onSelect}\r\n      style={{ marginBottom: 30 }}\r\n    >\r\n      {navElements.map(({ key, text, icon }, index) => (\r\n        <Nav.Item\r\n          key={index}\r\n          eventKey={key}\r\n          icon={icon && <Icon icon={icon} />}\r\n        >\r\n          {text}\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const connectedUser = useSelector((store) => store.global.connectedUser);\r\n  const [navElements, setNavElements] = useState([]);\r\n  const [active, setActive] = useState(\"employees\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!connectedUser) history.push(\"/login\");\r\n    else {\r\n      setNavElements(\r\n        connectedUser.level === \"Admin\"\r\n          ? [\r\n              {\r\n                key: \"employees\",\r\n                text: \"Gestion des Employés\",\r\n                icon: \"people-group\",\r\n              },\r\n              { key: \"leaves\", text: \"Gestion des Congés\", icon: \"toggle-up\" },\r\n              { key: \"view-leaves\", text: \"Congés Demandés\", icon: \"th-list\" },\r\n            ]\r\n          : [{ key: \"view-leaves\", text: \"Congés Demandés\", icon: \"th-list\" }]\r\n      );\r\n\r\n      if (connectedUser.level === \"Admin\")\r\n        history.push(\"/management/employees\");\r\n      else {\r\n        setActive(\"view-leaves\");\r\n        history.push(\"/management/view-leaves\");\r\n      }\r\n    }\r\n  }, [connectedUser]); // eslint-disable-line\r\n\r\n  const handleSelect = (activeKey) => {\r\n    setActive(activeKey);\r\n    history.push(`/management/${activeKey}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Panel>\r\n        <CustomNav\r\n          appearance=\"subtle\"\r\n          active={active}\r\n          navElements={navElements}\r\n          onSelect={handleSelect}\r\n        />\r\n\r\n        <Switch>\r\n          {connectedUser?.level === \"Admin\" && (\r\n            <Route path=\"/management/employees\">\r\n              <EmployeesMng />\r\n            </Route>\r\n          )}\r\n          {connectedUser?.level === \"Admin\" && (\r\n            <Route path=\"/management/leaves\">\r\n              <LeavesMng />\r\n            </Route>\r\n          )}\r\n          <Route path=\"/management/view-leaves\">\r\n            <EmployeeLeaves />\r\n          </Route>\r\n        </Switch>\r\n      </Panel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Alert, Container } from \"rsuite\";\nimport {\n  setAccessToken,\n  setConnectedUser,\n  setTheme,\n} from \"./store/actions/action-creators\";\n\nimport AppHeader from \"./common/AppHeader\";\nimport AppFooter from \"./common/AppFooter\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\nimport \"./App.scss\";\nimport axios from \"axios\";\nimport baseUrl from \"./utils/baseUrl\";\n\nconst App = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    let theme = localStorage.getItem(\"theme\");\n    dispatch(setTheme(theme));\n\n    if (!accessToken) {\n      history.push(\"/login\");\n    } else {\n      axios\n        .get(`${baseUrl}/employees/verify-token`, {\n          headers: { Authorization: accessToken },\n        })\n        .then((res) => {\n          dispatch(setAccessToken(accessToken));\n          dispatch(setConnectedUser(res.data.employee));\n          history.push(\"/management/employees\");\n        })\n        .catch((err) => {\n          Alert.error(\"Erreur lors de la connexion au serveur.\");\n        });\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <div>\n      <Container>\n        <AppHeader />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/management\">\n            <Dashboard />\n          </Route>\n        </Switch>\n        <AppFooter />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as _ from \"../actions/action-types\";\r\n\r\nconst loadingReducer = (state = false, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case _.START_LOADING:\r\n      return true;\r\n\r\n    case _.STOP_LOADING:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","import * as _ from \"../actions/action-types\";\r\n\r\nconst initialState = {\r\n  accessToken: \"\",\r\n  connectedUser: null,\r\n  theme: \"light\",\r\n};\r\n\r\nconst globalReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case _.SET_ACCESS_TOKEN:\r\n      return { ...state, accessToken: payload };\r\n\r\n    case _.REMOVE_ACCESS_TOKEN:\r\n      return { ...state, accessToken: \"\" };\r\n\r\n    case _.SET_CONNECTED_USER:\r\n      return {\r\n        ...state,\r\n        connectedUser: payload,\r\n      };\r\n\r\n    case _.REMOVE_CONNECTED_USER:\r\n      return { ...state, connectedUser: null };\r\n\r\n    case _.SET_THEME:\r\n      return { ...state, theme: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default globalReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport loadingReducer from \"./loading.reducer\";\r\nimport globalReducer from \"./global.reducer\";\r\n\r\nexport default combineReducers({\r\n  loading: loadingReducer,\r\n  global: globalReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nlet theme = localStorage.getItem(\"theme\");\n\nif (!theme) {\n  theme = \"light\";\n  localStorage.setItem(\"theme\", theme);\n}\n\nif (theme === \"light\") {\n  import(\"rsuite/dist/styles/rsuite-default.css\");\n} else {\n  import(\"rsuite/dist/styles/rsuite-dark.css\");\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}